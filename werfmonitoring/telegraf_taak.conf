[[outputs.influxdb_v2]]
  # Naar welke influxdb/bucket/... moet de data?
  urls = ["http://influxdb:8086"]
  token = "admintoken"
  organization = "infm"
  bucket = "timeseries"

[[inputs.mqtt_consumer]]
  # Van welke mqtt server halen we de data?
  servers = ["tcp://mosquitto:1883"] # 'mosquitto' is de hostname toegekend door Docker compose aan de MQTT broker
  topics = [
    "construction_site/#", # Alle topics onder construction_site
  ]
  qos = 0
  connection_timeout = "30s"
  client_id = "telegraf-mqtt-consumer"
  data_format = "json_v2" # MQTT data wordt in JSON formaat aangeleverd
  topic_tag = ""
  
  # Configuratie van hoe MQTT topics omgezet moeten worden in tags en fields
  [[inputs.mqtt_consumer.topic_parsing]]
    # Example topic: construction_site/site/smartwatch/smartwatch_1/sensor/worker_1_smartwatch_decibel_sensor_1/decibel_value
    topic = "construction_site/+/+/+/+/+/+" # parsen van sensor data onder het construction_site topic
    measurement = "measurement/_/_/_/_/_/_"  # construction_site als measurement
    # site, device (smartwatch/machine), device_id, type (sensor/actuator) en sensor/actuatorid als tags
    tags = "_/site/device/device_id/type/component_id/_" 

  # Configuratie van hoe JSON data geparsed moet worden in tags en fields
  [[inputs.mqtt_consumer.json_v2]]
      # TAGS
      [[inputs.mqtt_consumer.json_v2.tag]]
          path = "unit"  # for sensors
          type = "string"
          optional = true # actuators don't have units
      # FIELDS
      [[inputs.mqtt_consumer.json_v2.field]]
          path = "value" # for sensors
          type = "float"
          optional = true # actuators don't have value
      [[inputs.mqtt_consumer.json_v2.field]]
          path = "state" # for actuators
          type = "string"
          optional = true # sensors don't have state
      [[inputs.mqtt_consumer.json_v2.field]]
          path = "latitude" # for GPS-trackers
          type = "float"
          optional = true 
      [[inputs.mqtt_consumer.json_v2.field]]
          path = "longitude" # for GPS-trackers
          type = "float"
          optional = true 
      [[inputs.mqtt_consumer.json_v2.field]]
          path = "fueling" # for machines
          type = "boolean"
          optional = true